Using ``7-base_geometry``
---------------------

This subclass of list will return an ascending order sorted list
of integers. First import ``BaseGeometry`` from the ``7-base_geometry``:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)
	>>> bg.integer_validator("", 24)


	Exceptions:

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	ValueError: distance must be greater than 0

	>>> bg.integer_validator("name", None)
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("name", )
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("age", Koby)
	Traceback (most recent call last):
	NameError: name 'Koby' is not defined

	>>> bg.integer_validator("list", [2, 4, 6])
	Traceback (most recent call last):
	TypeError: list must be an integer

	>>> bg.integer_validator("age", 32.0)
	Traceback (most recent call last):
	TypeError: age must be an integer

	>>> bg.integer_validator("my_int", (1,))
	Traceback (most recent call last):
	TypeError: my_int must be an integer

	>>> bg.integer_validator("my_int", {1, 2})
	Traceback (most recent call last):
	TypeError: my_int must be an integer

	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> bg.integer_validator("age", float("inf"))
	Traceback (most recent call last):
	TypeError: age must be an integer

	>>> bg.integer_validator("age", float("nan"))
	Traceback (most recent call last):
	TypeError: age must be an integer

	>>> bg.integer_validator("list", False)
	Traceback (most recent call last):
	TypeError: list must be an integer
